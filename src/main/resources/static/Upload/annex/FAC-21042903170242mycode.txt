DROP DATABASE IF EXISTS UniversityDB
GO

CREATE DATABASE UniversityDB;
GO

USE UniversityDB;

CREATE TABLE Module -- store course details
(
    mCode CHAR(4) PRIMARY KEY,
    mName VARCHAR(50),
    year INT,
    semester INT
)

CREATE TABLE Student --store student details
(
    sId CHAR(4) PRIMARY KEY,
    sName VARCHAR(50),
    age INT,
    gpa REAL
)
CREATE TABLE Follow --store the student and courses they follow
(
    mCode CHAR(4) REFERENCES Module(mCode),
    sId CHAR(4) REFERENCES Student(sId),
    registeredDate DATE,
    PRIMARY KEY(mCode,sid)
)
CREATE TABLE Hall -- store the lecture hall details
(
    hId CHAR(4) PRIMARY KEY,
    buildingNo INT,
    floorNo INT,
    capacity INT
)

CREATE TABLE HallAllocation -- store the hall allocation for modules
(
    mCode CHAR(4) REFERENCES Module(mCode),
    hId CHAR(4) REFERENCES Hall(hId),
    day CHAR(3),-- ex: Mon, Tue, Wed
    startTime TIME,
    endTime TIME,
    PRIMARY KEY(mCode,hId)
)

-- sample data
INSERT INTO Module VALUES('M001','Database Management 01',1,2)
INSERT INTO Module VALUES('M002','Object Oriented Programming',2,1)
INSERT INTO Module VALUES('M003','Database Management 02',2,1)

INSERT INTO Student VALUES('S001','Saman Perera',21,3.5)
INSERT INTO Student VALUES('S002','Kamal Fernando',22,3.2)
INSERT INTO Student VALUES('S003','Aruni Jayathilake',20,2.9)
INSERT INTO Student VALUES('S004','Kamal Jayasinghe',25,3.1)


INSERT INTO Hall VALUES('H001',2,3,200)
INSERT INTO Hall VALUES('H002',1,2,300)
INSERT INTO Hall VALUES('H003',3,4,250)
INSERT INTO Hall VALUES('H004',3,4,3)

INSERT INTO Follow VALUES('M001','S001','16-Sep-2020')
INSERT INTO Follow VALUES('M001','S002','12-Sep-2020')
INSERT INTO Follow VALUES('M002','S001','11-Aug-2020')
INSERT INTO Follow VALUES('M002','S002','23-Aug-2020')
INSERT INTO Follow VALUES('M002','S003','02-Sep-2020')

INSERT INTO HallAllocation VALUES('M001','H001','Tue','08:15','10:15')
INSERT INTO HallAllocation VALUES('M002','H001','Wed','10:30','12:30')
INSERT INTO HallAllocation VALUES('M003','H002','Wed','10:30','12:30')


select * from Module
select * from Follow
select * from Student

go
--01
create view ModuleDetails
as
	SELECT m.mName,m.year, count(f.sId) as no_of_students
	from Module m, Follow f
	where m.mCode=f.mCode 
	group by m.mName,m.year


select * from ModuleDetails

go


--02
create alter function  getStudentsPerModule(@mname varchar(50))
returns int
as
begin
declare @NoOfStu int
	select @NoOfStu=no_of_students
	from  ModuleDetails
	where mName=@mname

	return  @NoOfStu
end



declare @totStu int
exec @totStu=getStudentsPerModule 'Database Management 01'
print @totStu

select * from HallAllocation
select * from Hall
select * from Student

go
--03
create trigger checkHallCapacity
on HallAllocation
after insert
as 
BEGIN
	declare @mdcode char(20)
	declare @hld char(20)
	select  @mdcode=mCode, @hld=hId from inserted

	declare @mdname varchar(50)
	select @mdname=mName from Module where mCode=@mdcode

	declare @totStu int
	exec @totStu=getStudentsPerModule @mdname

	declare @cap int
	select @cap= capacity from Hall where hId=@hld

	if @totStu > @cap
	BEGIN
		print 'hall is not adequate'
	END

END
insert into HallAllocation